#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NorthvilleUI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Northville")]
	public partial class NorthvilleLibDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAuthor(Author instance);
    partial void UpdateAuthor(Author instance);
    partial void DeleteAuthor(Author instance);
    partial void InsertBook_Copy(Book_Copy instance);
    partial void UpdateBook_Copy(Book_Copy instance);
    partial void DeleteBook_Copy(Book_Copy instance);
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertBorrow_Transaction(Borrow_Transaction instance);
    partial void UpdateBorrow_Transaction(Borrow_Transaction instance);
    partial void DeleteBorrow_Transaction(Borrow_Transaction instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertFine(Fine instance);
    partial void UpdateFine(Fine instance);
    partial void DeleteFine(Fine instance);
    partial void InsertGenre(Genre instance);
    partial void UpdateGenre(Genre instance);
    partial void DeleteGenre(Genre instance);
    partial void InsertLibrary_Visit(Library_Visit instance);
    partial void UpdateLibrary_Visit(Library_Visit instance);
    partial void DeleteLibrary_Visit(Library_Visit instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public NorthvilleLibDataContext() : 
				base(global::NorthvilleUI.Properties.Settings.Default.NorthvilleConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public NorthvilleLibDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NorthvilleLibDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NorthvilleLibDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NorthvilleLibDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Author> Authors
		{
			get
			{
				return this.GetTable<Author>();
			}
		}
		
		public System.Data.Linq.Table<Book_Copy> Book_Copies
		{
			get
			{
				return this.GetTable<Book_Copy>();
			}
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<Borrow_Transaction> Borrow_Transactions
		{
			get
			{
				return this.GetTable<Borrow_Transaction>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<Fine> Fines
		{
			get
			{
				return this.GetTable<Fine>();
			}
		}
		
		public System.Data.Linq.Table<Genre> Genres
		{
			get
			{
				return this.GetTable<Genre>();
			}
		}
		
		public System.Data.Linq.Table<Library_Visit> Library_Visits
		{
			get
			{
				return this.GetTable<Library_Visit>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<AvailableBook> AvailableBooks
		{
			get
			{
				return this.GetTable<AvailableBook>();
			}
		}
		
		public System.Data.Linq.Table<OverdueBook> OverdueBooks
		{
			get
			{
				return this.GetTable<OverdueBook>();
			}
		}
		
		public System.Data.Linq.Table<FineBalance> FineBalances
		{
			get
			{
				return this.GetTable<FineBalance>();
			}
		}
		
		public System.Data.Linq.Table<StudentFinesSummary> StudentFinesSummaries
		{
			get
			{
				return this.GetTable<StudentFinesSummary>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="NorthvilleLib.usp_ProcessBookCheckout")]
		public int usp_ProcessBookCheckout([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string student_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string book_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> due_days)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), student_id, book_id, due_days);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="NorthvilleLib.usp_ReturnBook")]
		public int usp_ReturnBook([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string transaction_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> actual_return_date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), transaction_id, actual_return_date);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.Authors")]
	public partial class Author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _author_id;
		
		private string _author_name;
		
		private EntitySet<Book> _Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onauthor_idChanging(string value);
    partial void Onauthor_idChanged();
    partial void Onauthor_nameChanging(string value);
    partial void Onauthor_nameChanged();
    #endregion
		
		public Author()
		{
			this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string author_id
		{
			get
			{
				return this._author_id;
			}
			set
			{
				if ((this._author_id != value))
				{
					this.Onauthor_idChanging(value);
					this.SendPropertyChanging();
					this._author_id = value;
					this.SendPropertyChanged("author_id");
					this.Onauthor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string author_name
		{
			get
			{
				return this._author_name;
			}
			set
			{
				if ((this._author_name != value))
				{
					this.Onauthor_nameChanging(value);
					this.SendPropertyChanging();
					this._author_name = value;
					this.SendPropertyChanged("author_name");
					this.Onauthor_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Author_Book", Storage="_Books", ThisKey="author_id", OtherKey="author_id")]
		public EntitySet<Book> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Author = this;
		}
		
		private void detach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Author = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.Book_Copies")]
	public partial class Book_Copy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _copy_id;
		
		private string _book_id;
		
		private string _copy_status;
		
		private System.DateTime _date_added;
		
		private EntitySet<Borrow_Transaction> _Borrow_Transactions;
		
		private EntityRef<Book> _Book;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncopy_idChanging(string value);
    partial void Oncopy_idChanged();
    partial void Onbook_idChanging(string value);
    partial void Onbook_idChanged();
    partial void Oncopy_statusChanging(string value);
    partial void Oncopy_statusChanged();
    partial void Ondate_addedChanging(System.DateTime value);
    partial void Ondate_addedChanged();
    #endregion
		
		public Book_Copy()
		{
			this._Borrow_Transactions = new EntitySet<Borrow_Transaction>(new Action<Borrow_Transaction>(this.attach_Borrow_Transactions), new Action<Borrow_Transaction>(this.detach_Borrow_Transactions));
			this._Book = default(EntityRef<Book>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_copy_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string copy_id
		{
			get
			{
				return this._copy_id;
			}
			set
			{
				if ((this._copy_id != value))
				{
					this.Oncopy_idChanging(value);
					this.SendPropertyChanging();
					this._copy_id = value;
					this.SendPropertyChanged("copy_id");
					this.Oncopy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string book_id
		{
			get
			{
				return this._book_id;
			}
			set
			{
				if ((this._book_id != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbook_idChanging(value);
					this.SendPropertyChanging();
					this._book_id = value;
					this.SendPropertyChanged("book_id");
					this.Onbook_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_copy_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string copy_status
		{
			get
			{
				return this._copy_status;
			}
			set
			{
				if ((this._copy_status != value))
				{
					this.Oncopy_statusChanging(value);
					this.SendPropertyChanging();
					this._copy_status = value;
					this.SendPropertyChanged("copy_status");
					this.Oncopy_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="Date NOT NULL")]
		public System.DateTime date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Copy_Borrow_Transaction", Storage="_Borrow_Transactions", ThisKey="copy_id", OtherKey="copy_id")]
		public EntitySet<Borrow_Transaction> Borrow_Transactions
		{
			get
			{
				return this._Borrow_Transactions;
			}
			set
			{
				this._Borrow_Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Book_Copy", Storage="_Book", ThisKey="book_id", OtherKey="book_id", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.Book_Copies.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.Book_Copies.Add(this);
						this._book_id = value.book_id;
					}
					else
					{
						this._book_id = default(string);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Borrow_Transactions(Borrow_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Book_Copy = this;
		}
		
		private void detach_Borrow_Transactions(Borrow_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Book_Copy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.Books")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _book_id;
		
		private string _book_isbn;
		
		private string _book_title;
		
		private int _book_publication_year;
		
		private string _genre_id;
		
		private string _author_id;
		
		private string _book_publisher;
		
		private EntitySet<Book_Copy> _Book_Copies;
		
		private EntityRef<Author> _Author;
		
		private EntityRef<Genre> _Genre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbook_idChanging(string value);
    partial void Onbook_idChanged();
    partial void Onbook_isbnChanging(string value);
    partial void Onbook_isbnChanged();
    partial void Onbook_titleChanging(string value);
    partial void Onbook_titleChanged();
    partial void Onbook_publication_yearChanging(int value);
    partial void Onbook_publication_yearChanged();
    partial void Ongenre_idChanging(string value);
    partial void Ongenre_idChanged();
    partial void Onauthor_idChanging(string value);
    partial void Onauthor_idChanged();
    partial void Onbook_publisherChanging(string value);
    partial void Onbook_publisherChanged();
    #endregion
		
		public Book()
		{
			this._Book_Copies = new EntitySet<Book_Copy>(new Action<Book_Copy>(this.attach_Book_Copies), new Action<Book_Copy>(this.detach_Book_Copies));
			this._Author = default(EntityRef<Author>);
			this._Genre = default(EntityRef<Genre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string book_id
		{
			get
			{
				return this._book_id;
			}
			set
			{
				if ((this._book_id != value))
				{
					this.Onbook_idChanging(value);
					this.SendPropertyChanging();
					this._book_id = value;
					this.SendPropertyChanged("book_id");
					this.Onbook_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_isbn", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string book_isbn
		{
			get
			{
				return this._book_isbn;
			}
			set
			{
				if ((this._book_isbn != value))
				{
					this.Onbook_isbnChanging(value);
					this.SendPropertyChanging();
					this._book_isbn = value;
					this.SendPropertyChanged("book_isbn");
					this.Onbook_isbnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_title", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string book_title
		{
			get
			{
				return this._book_title;
			}
			set
			{
				if ((this._book_title != value))
				{
					this.Onbook_titleChanging(value);
					this.SendPropertyChanging();
					this._book_title = value;
					this.SendPropertyChanged("book_title");
					this.Onbook_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_publication_year", DbType="Int NOT NULL")]
		public int book_publication_year
		{
			get
			{
				return this._book_publication_year;
			}
			set
			{
				if ((this._book_publication_year != value))
				{
					this.Onbook_publication_yearChanging(value);
					this.SendPropertyChanging();
					this._book_publication_year = value;
					this.SendPropertyChanged("book_publication_year");
					this.Onbook_publication_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string genre_id
		{
			get
			{
				return this._genre_id;
			}
			set
			{
				if ((this._genre_id != value))
				{
					if (this._Genre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongenre_idChanging(value);
					this.SendPropertyChanging();
					this._genre_id = value;
					this.SendPropertyChanged("genre_id");
					this.Ongenre_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string author_id
		{
			get
			{
				return this._author_id;
			}
			set
			{
				if ((this._author_id != value))
				{
					if (this._Author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onauthor_idChanging(value);
					this.SendPropertyChanging();
					this._author_id = value;
					this.SendPropertyChanged("author_id");
					this.Onauthor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_publisher", DbType="VarChar(100)")]
		public string book_publisher
		{
			get
			{
				return this._book_publisher;
			}
			set
			{
				if ((this._book_publisher != value))
				{
					this.Onbook_publisherChanging(value);
					this.SendPropertyChanging();
					this._book_publisher = value;
					this.SendPropertyChanged("book_publisher");
					this.Onbook_publisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Book_Copy", Storage="_Book_Copies", ThisKey="book_id", OtherKey="book_id")]
		public EntitySet<Book_Copy> Book_Copies
		{
			get
			{
				return this._Book_Copies;
			}
			set
			{
				this._Book_Copies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Author_Book", Storage="_Author", ThisKey="author_id", OtherKey="author_id", IsForeignKey=true)]
		public Author Author
		{
			get
			{
				return this._Author.Entity;
			}
			set
			{
				Author previousValue = this._Author.Entity;
				if (((previousValue != value) 
							|| (this._Author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Author.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._Author.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._author_id = value.author_id;
					}
					else
					{
						this._author_id = default(string);
					}
					this.SendPropertyChanged("Author");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_Book", Storage="_Genre", ThisKey="genre_id", OtherKey="genre_id", IsForeignKey=true)]
		public Genre Genre
		{
			get
			{
				return this._Genre.Entity;
			}
			set
			{
				Genre previousValue = this._Genre.Entity;
				if (((previousValue != value) 
							|| (this._Genre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Genre.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._Genre.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._genre_id = value.genre_id;
					}
					else
					{
						this._genre_id = default(string);
					}
					this.SendPropertyChanged("Genre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Book_Copies(Book_Copy entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_Book_Copies(Book_Copy entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.Borrow_Transactions")]
	public partial class Borrow_Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _transaction_id;
		
		private string _student_id;
		
		private string _copy_id;
		
		private System.DateTime _borrow_date;
		
		private System.DateTime _due_date;
		
		private System.Nullable<System.DateTime> _return_date;
		
		private EntitySet<Fine> _Fines;
		
		private EntityRef<Book_Copy> _Book_Copy;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontransaction_idChanging(string value);
    partial void Ontransaction_idChanged();
    partial void Onstudent_idChanging(string value);
    partial void Onstudent_idChanged();
    partial void Oncopy_idChanging(string value);
    partial void Oncopy_idChanged();
    partial void Onborrow_dateChanging(System.DateTime value);
    partial void Onborrow_dateChanged();
    partial void Ondue_dateChanging(System.DateTime value);
    partial void Ondue_dateChanged();
    partial void Onreturn_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onreturn_dateChanged();
    #endregion
		
		public Borrow_Transaction()
		{
			this._Fines = new EntitySet<Fine>(new Action<Fine>(this.attach_Fines), new Action<Fine>(this.detach_Fines));
			this._Book_Copy = default(EntityRef<Book_Copy>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string transaction_id
		{
			get
			{
				return this._transaction_id;
			}
			set
			{
				if ((this._transaction_id != value))
				{
					this.Ontransaction_idChanging(value);
					this.SendPropertyChanging();
					this._transaction_id = value;
					this.SendPropertyChanged("transaction_id");
					this.Ontransaction_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_copy_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string copy_id
		{
			get
			{
				return this._copy_id;
			}
			set
			{
				if ((this._copy_id != value))
				{
					if (this._Book_Copy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncopy_idChanging(value);
					this.SendPropertyChanging();
					this._copy_id = value;
					this.SendPropertyChanged("copy_id");
					this.Oncopy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrow_date", DbType="Date NOT NULL")]
		public System.DateTime borrow_date
		{
			get
			{
				return this._borrow_date;
			}
			set
			{
				if ((this._borrow_date != value))
				{
					this.Onborrow_dateChanging(value);
					this.SendPropertyChanging();
					this._borrow_date = value;
					this.SendPropertyChanged("borrow_date");
					this.Onborrow_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_due_date", DbType="Date NOT NULL")]
		public System.DateTime due_date
		{
			get
			{
				return this._due_date;
			}
			set
			{
				if ((this._due_date != value))
				{
					this.Ondue_dateChanging(value);
					this.SendPropertyChanging();
					this._due_date = value;
					this.SendPropertyChanged("due_date");
					this.Ondue_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_date", DbType="Date")]
		public System.Nullable<System.DateTime> return_date
		{
			get
			{
				return this._return_date;
			}
			set
			{
				if ((this._return_date != value))
				{
					this.Onreturn_dateChanging(value);
					this.SendPropertyChanging();
					this._return_date = value;
					this.SendPropertyChanged("return_date");
					this.Onreturn_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Borrow_Transaction_Fine", Storage="_Fines", ThisKey="transaction_id", OtherKey="transaction_id")]
		public EntitySet<Fine> Fines
		{
			get
			{
				return this._Fines;
			}
			set
			{
				this._Fines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Copy_Borrow_Transaction", Storage="_Book_Copy", ThisKey="copy_id", OtherKey="copy_id", IsForeignKey=true)]
		public Book_Copy Book_Copy
		{
			get
			{
				return this._Book_Copy.Entity;
			}
			set
			{
				Book_Copy previousValue = this._Book_Copy.Entity;
				if (((previousValue != value) 
							|| (this._Book_Copy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book_Copy.Entity = null;
						previousValue.Borrow_Transactions.Remove(this);
					}
					this._Book_Copy.Entity = value;
					if ((value != null))
					{
						value.Borrow_Transactions.Add(this);
						this._copy_id = value.copy_id;
					}
					else
					{
						this._copy_id = default(string);
					}
					this.SendPropertyChanged("Book_Copy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Borrow_Transaction", Storage="_Student", ThisKey="student_id", OtherKey="student_id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Borrow_Transactions.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Borrow_Transactions.Add(this);
						this._student_id = value.student_id;
					}
					else
					{
						this._student_id = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fines(Fine entity)
		{
			this.SendPropertyChanging();
			entity.Borrow_Transaction = this;
		}
		
		private void detach_Fines(Fine entity)
		{
			this.SendPropertyChanging();
			entity.Borrow_Transaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.Courses")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _course_id;
		
		private string _course_name;
		
		private string _department;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncourse_idChanging(string value);
    partial void Oncourse_idChanged();
    partial void Oncourse_nameChanging(string value);
    partial void Oncourse_nameChanged();
    partial void OndepartmentChanging(string value);
    partial void OndepartmentChanged();
    #endregion
		
		public Course()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string course_name
		{
			get
			{
				return this._course_name;
			}
			set
			{
				if ((this._course_name != value))
				{
					this.Oncourse_nameChanging(value);
					this.SendPropertyChanging();
					this._course_name = value;
					this.SendPropertyChanged("course_name");
					this.Oncourse_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Student", Storage="_Students", ThisKey="course_id", OtherKey="course_id")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.Fines")]
	public partial class Fine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _fine_id;
		
		private string _transaction_id;
		
		private decimal _fine_amount;
		
		private string _fine_status;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Borrow_Transaction> _Borrow_Transaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfine_idChanging(string value);
    partial void Onfine_idChanged();
    partial void Ontransaction_idChanging(string value);
    partial void Ontransaction_idChanged();
    partial void Onfine_amountChanging(decimal value);
    partial void Onfine_amountChanged();
    partial void Onfine_statusChanging(string value);
    partial void Onfine_statusChanged();
    #endregion
		
		public Fine()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Borrow_Transaction = default(EntityRef<Borrow_Transaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string fine_id
		{
			get
			{
				return this._fine_id;
			}
			set
			{
				if ((this._fine_id != value))
				{
					this.Onfine_idChanging(value);
					this.SendPropertyChanging();
					this._fine_id = value;
					this.SendPropertyChanged("fine_id");
					this.Onfine_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string transaction_id
		{
			get
			{
				return this._transaction_id;
			}
			set
			{
				if ((this._transaction_id != value))
				{
					if (this._Borrow_Transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontransaction_idChanging(value);
					this.SendPropertyChanging();
					this._transaction_id = value;
					this.SendPropertyChanged("transaction_id");
					this.Ontransaction_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine_amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal fine_amount
		{
			get
			{
				return this._fine_amount;
			}
			set
			{
				if ((this._fine_amount != value))
				{
					this.Onfine_amountChanging(value);
					this.SendPropertyChanging();
					this._fine_amount = value;
					this.SendPropertyChanged("fine_amount");
					this.Onfine_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string fine_status
		{
			get
			{
				return this._fine_status;
			}
			set
			{
				if ((this._fine_status != value))
				{
					this.Onfine_statusChanging(value);
					this.SendPropertyChanging();
					this._fine_status = value;
					this.SendPropertyChanged("fine_status");
					this.Onfine_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fine_Payment", Storage="_Payments", ThisKey="fine_id", OtherKey="fine_id")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Borrow_Transaction_Fine", Storage="_Borrow_Transaction", ThisKey="transaction_id", OtherKey="transaction_id", IsForeignKey=true)]
		public Borrow_Transaction Borrow_Transaction
		{
			get
			{
				return this._Borrow_Transaction.Entity;
			}
			set
			{
				Borrow_Transaction previousValue = this._Borrow_Transaction.Entity;
				if (((previousValue != value) 
							|| (this._Borrow_Transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Borrow_Transaction.Entity = null;
						previousValue.Fines.Remove(this);
					}
					this._Borrow_Transaction.Entity = value;
					if ((value != null))
					{
						value.Fines.Add(this);
						this._transaction_id = value.transaction_id;
					}
					else
					{
						this._transaction_id = default(string);
					}
					this.SendPropertyChanged("Borrow_Transaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Fine = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Fine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.Genres")]
	public partial class Genre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _genre_id;
		
		private string _genre_name;
		
		private EntitySet<Book> _Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongenre_idChanging(string value);
    partial void Ongenre_idChanged();
    partial void Ongenre_nameChanging(string value);
    partial void Ongenre_nameChanged();
    #endregion
		
		public Genre()
		{
			this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string genre_id
		{
			get
			{
				return this._genre_id;
			}
			set
			{
				if ((this._genre_id != value))
				{
					this.Ongenre_idChanging(value);
					this.SendPropertyChanging();
					this._genre_id = value;
					this.SendPropertyChanged("genre_id");
					this.Ongenre_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string genre_name
		{
			get
			{
				return this._genre_name;
			}
			set
			{
				if ((this._genre_name != value))
				{
					this.Ongenre_nameChanging(value);
					this.SendPropertyChanging();
					this._genre_name = value;
					this.SendPropertyChanged("genre_name");
					this.Ongenre_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_Book", Storage="_Books", ThisKey="genre_id", OtherKey="genre_id")]
		public EntitySet<Book> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Genre = this;
		}
		
		private void detach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Genre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.Library_Visits")]
	public partial class Library_Visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _visit_id;
		
		private string _student_id;
		
		private System.DateTime _visit_date;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvisit_idChanging(string value);
    partial void Onvisit_idChanged();
    partial void Onstudent_idChanging(string value);
    partial void Onstudent_idChanged();
    partial void Onvisit_dateChanging(System.DateTime value);
    partial void Onvisit_dateChanged();
    #endregion
		
		public Library_Visit()
		{
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visit_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string visit_id
		{
			get
			{
				return this._visit_id;
			}
			set
			{
				if ((this._visit_id != value))
				{
					this.Onvisit_idChanging(value);
					this.SendPropertyChanging();
					this._visit_id = value;
					this.SendPropertyChanged("visit_id");
					this.Onvisit_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visit_date", DbType="DateTime NOT NULL")]
		public System.DateTime visit_date
		{
			get
			{
				return this._visit_date;
			}
			set
			{
				if ((this._visit_date != value))
				{
					this.Onvisit_dateChanging(value);
					this.SendPropertyChanging();
					this._visit_date = value;
					this.SendPropertyChanged("visit_date");
					this.Onvisit_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Library_Visit", Storage="_Student", ThisKey="student_id", OtherKey="student_id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Library_Visits.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Library_Visits.Add(this);
						this._student_id = value.student_id;
					}
					else
					{
						this._student_id = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.Payments")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _payment_id;
		
		private string _fine_id;
		
		private string _student_id;
		
		private System.DateTime _payment_date;
		
		private decimal _payment_amount;
		
		private string _payment_method;
		
		private string _receipt_number;
		
		private EntityRef<Fine> _Fine;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpayment_idChanging(string value);
    partial void Onpayment_idChanged();
    partial void Onfine_idChanging(string value);
    partial void Onfine_idChanged();
    partial void Onstudent_idChanging(string value);
    partial void Onstudent_idChanged();
    partial void Onpayment_dateChanging(System.DateTime value);
    partial void Onpayment_dateChanged();
    partial void Onpayment_amountChanging(decimal value);
    partial void Onpayment_amountChanged();
    partial void Onpayment_methodChanging(string value);
    partial void Onpayment_methodChanged();
    partial void Onreceipt_numberChanging(string value);
    partial void Onreceipt_numberChanged();
    #endregion
		
		public Payment()
		{
			this._Fine = default(EntityRef<Fine>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string payment_id
		{
			get
			{
				return this._payment_id;
			}
			set
			{
				if ((this._payment_id != value))
				{
					this.Onpayment_idChanging(value);
					this.SendPropertyChanging();
					this._payment_id = value;
					this.SendPropertyChanged("payment_id");
					this.Onpayment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string fine_id
		{
			get
			{
				return this._fine_id;
			}
			set
			{
				if ((this._fine_id != value))
				{
					if (this._Fine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfine_idChanging(value);
					this.SendPropertyChanging();
					this._fine_id = value;
					this.SendPropertyChanged("fine_id");
					this.Onfine_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_date", DbType="DateTime NOT NULL")]
		public System.DateTime payment_date
		{
			get
			{
				return this._payment_date;
			}
			set
			{
				if ((this._payment_date != value))
				{
					this.Onpayment_dateChanging(value);
					this.SendPropertyChanging();
					this._payment_date = value;
					this.SendPropertyChanged("payment_date");
					this.Onpayment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal payment_amount
		{
			get
			{
				return this._payment_amount;
			}
			set
			{
				if ((this._payment_amount != value))
				{
					this.Onpayment_amountChanging(value);
					this.SendPropertyChanging();
					this._payment_amount = value;
					this.SendPropertyChanged("payment_amount");
					this.Onpayment_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_method", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string payment_method
		{
			get
			{
				return this._payment_method;
			}
			set
			{
				if ((this._payment_method != value))
				{
					this.Onpayment_methodChanging(value);
					this.SendPropertyChanging();
					this._payment_method = value;
					this.SendPropertyChanged("payment_method");
					this.Onpayment_methodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receipt_number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string receipt_number
		{
			get
			{
				return this._receipt_number;
			}
			set
			{
				if ((this._receipt_number != value))
				{
					this.Onreceipt_numberChanging(value);
					this.SendPropertyChanging();
					this._receipt_number = value;
					this.SendPropertyChanged("receipt_number");
					this.Onreceipt_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fine_Payment", Storage="_Fine", ThisKey="fine_id", OtherKey="fine_id", IsForeignKey=true)]
		public Fine Fine
		{
			get
			{
				return this._Fine.Entity;
			}
			set
			{
				Fine previousValue = this._Fine.Entity;
				if (((previousValue != value) 
							|| (this._Fine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fine.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Fine.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._fine_id = value.fine_id;
					}
					else
					{
						this._fine_id = default(string);
					}
					this.SendPropertyChanged("Fine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Payment", Storage="_Student", ThisKey="student_id", OtherKey="student_id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._student_id = value.student_id;
					}
					else
					{
						this._student_id = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.Students")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _student_id;
		
		private string _student_name;
		
		private string _student_email;
		
		private string _student_phone;
		
		private string _course_id;
		
		private string _student_status;
		
		private EntitySet<Borrow_Transaction> _Borrow_Transactions;
		
		private EntitySet<Library_Visit> _Library_Visits;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstudent_idChanging(string value);
    partial void Onstudent_idChanged();
    partial void Onstudent_nameChanging(string value);
    partial void Onstudent_nameChanged();
    partial void Onstudent_emailChanging(string value);
    partial void Onstudent_emailChanged();
    partial void Onstudent_phoneChanging(string value);
    partial void Onstudent_phoneChanged();
    partial void Oncourse_idChanging(string value);
    partial void Oncourse_idChanged();
    partial void Onstudent_statusChanging(string value);
    partial void Onstudent_statusChanged();
    #endregion
		
		public Student()
		{
			this._Borrow_Transactions = new EntitySet<Borrow_Transaction>(new Action<Borrow_Transaction>(this.attach_Borrow_Transactions), new Action<Borrow_Transaction>(this.detach_Borrow_Transactions));
			this._Library_Visits = new EntitySet<Library_Visit>(new Action<Library_Visit>(this.attach_Library_Visits), new Action<Library_Visit>(this.detach_Library_Visits));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string student_name
		{
			get
			{
				return this._student_name;
			}
			set
			{
				if ((this._student_name != value))
				{
					this.Onstudent_nameChanging(value);
					this.SendPropertyChanging();
					this._student_name = value;
					this.SendPropertyChanged("student_name");
					this.Onstudent_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string student_email
		{
			get
			{
				return this._student_email;
			}
			set
			{
				if ((this._student_email != value))
				{
					this.Onstudent_emailChanging(value);
					this.SendPropertyChanging();
					this._student_email = value;
					this.SendPropertyChanged("student_email");
					this.Onstudent_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_phone", DbType="VarChar(20)")]
		public string student_phone
		{
			get
			{
				return this._student_phone;
			}
			set
			{
				if ((this._student_phone != value))
				{
					this.Onstudent_phoneChanging(value);
					this.SendPropertyChanging();
					this._student_phone = value;
					this.SendPropertyChanged("student_phone");
					this.Onstudent_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string student_status
		{
			get
			{
				return this._student_status;
			}
			set
			{
				if ((this._student_status != value))
				{
					this.Onstudent_statusChanging(value);
					this.SendPropertyChanging();
					this._student_status = value;
					this.SendPropertyChanged("student_status");
					this.Onstudent_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Borrow_Transaction", Storage="_Borrow_Transactions", ThisKey="student_id", OtherKey="student_id")]
		public EntitySet<Borrow_Transaction> Borrow_Transactions
		{
			get
			{
				return this._Borrow_Transactions;
			}
			set
			{
				this._Borrow_Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Library_Visit", Storage="_Library_Visits", ThisKey="student_id", OtherKey="student_id")]
		public EntitySet<Library_Visit> Library_Visits
		{
			get
			{
				return this._Library_Visits;
			}
			set
			{
				this._Library_Visits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Payment", Storage="_Payments", ThisKey="student_id", OtherKey="student_id")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Student", Storage="_Course", ThisKey="course_id", OtherKey="course_id", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._course_id = value.course_id;
					}
					else
					{
						this._course_id = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Borrow_Transactions(Borrow_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Borrow_Transactions(Borrow_Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Library_Visits(Library_Visit entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Library_Visits(Library_Visit entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.AvailableBooks")]
	public partial class AvailableBook
	{
		
		private string _book_id;
		
		private string _book_title;
		
		private string _book_isbn;
		
		private string _author_name;
		
		private string _genre_name;
		
		private string _book_publisher;
		
		private int _book_publication_year;
		
		private System.Nullable<int> _available_copies;
		
		private string _copy_ids;
		
		public AvailableBook()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string book_id
		{
			get
			{
				return this._book_id;
			}
			set
			{
				if ((this._book_id != value))
				{
					this._book_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_title", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string book_title
		{
			get
			{
				return this._book_title;
			}
			set
			{
				if ((this._book_title != value))
				{
					this._book_title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_isbn", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string book_isbn
		{
			get
			{
				return this._book_isbn;
			}
			set
			{
				if ((this._book_isbn != value))
				{
					this._book_isbn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string author_name
		{
			get
			{
				return this._author_name;
			}
			set
			{
				if ((this._author_name != value))
				{
					this._author_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string genre_name
		{
			get
			{
				return this._genre_name;
			}
			set
			{
				if ((this._genre_name != value))
				{
					this._genre_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_publisher", DbType="VarChar(100)")]
		public string book_publisher
		{
			get
			{
				return this._book_publisher;
			}
			set
			{
				if ((this._book_publisher != value))
				{
					this._book_publisher = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_publication_year", DbType="Int NOT NULL")]
		public int book_publication_year
		{
			get
			{
				return this._book_publication_year;
			}
			set
			{
				if ((this._book_publication_year != value))
				{
					this._book_publication_year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_available_copies", DbType="Int")]
		public System.Nullable<int> available_copies
		{
			get
			{
				return this._available_copies;
			}
			set
			{
				if ((this._available_copies != value))
				{
					this._available_copies = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_copy_ids", DbType="VarChar(8000)")]
		public string copy_ids
		{
			get
			{
				return this._copy_ids;
			}
			set
			{
				if ((this._copy_ids != value))
				{
					this._copy_ids = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.OverdueBooks")]
	public partial class OverdueBook
	{
		
		private string _transaction_id;
		
		private string _student_id;
		
		private string _student_name;
		
		private string _book_id;
		
		private string _book_title;
		
		private string _copy_id;
		
		private System.DateTime _borrow_date;
		
		private System.DateTime _due_date;
		
		private System.Nullable<int> _days_overdue;
		
		private System.Nullable<decimal> _calculated_fine;
		
		private System.Nullable<decimal> _current_fine;
		
		private string _fine_status;
		
		public OverdueBook()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string transaction_id
		{
			get
			{
				return this._transaction_id;
			}
			set
			{
				if ((this._transaction_id != value))
				{
					this._transaction_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this._student_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string student_name
		{
			get
			{
				return this._student_name;
			}
			set
			{
				if ((this._student_name != value))
				{
					this._student_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string book_id
		{
			get
			{
				return this._book_id;
			}
			set
			{
				if ((this._book_id != value))
				{
					this._book_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_title", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string book_title
		{
			get
			{
				return this._book_title;
			}
			set
			{
				if ((this._book_title != value))
				{
					this._book_title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_copy_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string copy_id
		{
			get
			{
				return this._copy_id;
			}
			set
			{
				if ((this._copy_id != value))
				{
					this._copy_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrow_date", DbType="Date NOT NULL")]
		public System.DateTime borrow_date
		{
			get
			{
				return this._borrow_date;
			}
			set
			{
				if ((this._borrow_date != value))
				{
					this._borrow_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_due_date", DbType="Date NOT NULL")]
		public System.DateTime due_date
		{
			get
			{
				return this._due_date;
			}
			set
			{
				if ((this._due_date != value))
				{
					this._due_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_days_overdue", DbType="Int")]
		public System.Nullable<int> days_overdue
		{
			get
			{
				return this._days_overdue;
			}
			set
			{
				if ((this._days_overdue != value))
				{
					this._days_overdue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calculated_fine", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> calculated_fine
		{
			get
			{
				return this._calculated_fine;
			}
			set
			{
				if ((this._calculated_fine != value))
				{
					this._calculated_fine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_current_fine", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> current_fine
		{
			get
			{
				return this._current_fine;
			}
			set
			{
				if ((this._current_fine != value))
				{
					this._current_fine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine_status", DbType="VarChar(20)")]
		public string fine_status
		{
			get
			{
				return this._fine_status;
			}
			set
			{
				if ((this._fine_status != value))
				{
					this._fine_status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.FineBalances")]
	public partial class FineBalance
	{
		
		private string _fine_id;
		
		private string _transaction_id;
		
		private string _student_id;
		
		private string _student_name;
		
		private string _book_title;
		
		private decimal _original_fine;
		
		private decimal _amount_paid;
		
		private System.Nullable<decimal> _balance_remaining;
		
		private string _payment_status;
		
		public FineBalance()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string fine_id
		{
			get
			{
				return this._fine_id;
			}
			set
			{
				if ((this._fine_id != value))
				{
					this._fine_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string transaction_id
		{
			get
			{
				return this._transaction_id;
			}
			set
			{
				if ((this._transaction_id != value))
				{
					this._transaction_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this._student_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string student_name
		{
			get
			{
				return this._student_name;
			}
			set
			{
				if ((this._student_name != value))
				{
					this._student_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_title", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string book_title
		{
			get
			{
				return this._book_title;
			}
			set
			{
				if ((this._book_title != value))
				{
					this._book_title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_original_fine", DbType="Decimal(10,2) NOT NULL")]
		public decimal original_fine
		{
			get
			{
				return this._original_fine;
			}
			set
			{
				if ((this._original_fine != value))
				{
					this._original_fine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount_paid", DbType="Decimal(38,2) NOT NULL")]
		public decimal amount_paid
		{
			get
			{
				return this._amount_paid;
			}
			set
			{
				if ((this._amount_paid != value))
				{
					this._amount_paid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance_remaining", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> balance_remaining
		{
			get
			{
				return this._balance_remaining;
			}
			set
			{
				if ((this._balance_remaining != value))
				{
					this._balance_remaining = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_status", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string payment_status
		{
			get
			{
				return this._payment_status;
			}
			set
			{
				if ((this._payment_status != value))
				{
					this._payment_status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.StudentFinesSummary")]
	public partial class StudentFinesSummary
	{
		
		private string _student_id;
		
		private string _student_name;
		
		private string _student_email;
		
		private string _student_phone;
		
		private string _course_name;
		
		private System.Nullable<decimal> _outstanding_balance;
		
		private System.Nullable<int> _active_fines;
		
		public StudentFinesSummary()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this._student_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string student_name
		{
			get
			{
				return this._student_name;
			}
			set
			{
				if ((this._student_name != value))
				{
					this._student_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string student_email
		{
			get
			{
				return this._student_email;
			}
			set
			{
				if ((this._student_email != value))
				{
					this._student_email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_phone", DbType="VarChar(20)")]
		public string student_phone
		{
			get
			{
				return this._student_phone;
			}
			set
			{
				if ((this._student_phone != value))
				{
					this._student_phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string course_name
		{
			get
			{
				return this._course_name;
			}
			set
			{
				if ((this._course_name != value))
				{
					this._course_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outstanding_balance", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> outstanding_balance
		{
			get
			{
				return this._outstanding_balance;
			}
			set
			{
				if ((this._outstanding_balance != value))
				{
					this._outstanding_balance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active_fines", DbType="Int")]
		public System.Nullable<int> active_fines
		{
			get
			{
				return this._active_fines;
			}
			set
			{
				if ((this._active_fines != value))
				{
					this._active_fines = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLib.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _user_id;
		
		private string _username;
		
		private string _password;
		
		private string _user_role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onuser_roleChanging(string value);
    partial void Onuser_roleChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_role", DbType="VarChar(10)")]
		public string user_role
		{
			get
			{
				return this._user_role;
			}
			set
			{
				if ((this._user_role != value))
				{
					this.Onuser_roleChanging(value);
					this.SendPropertyChanging();
					this._user_role = value;
					this.SendPropertyChanged("user_role");
					this.Onuser_roleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
